---
swagger: "2.0"
info:
  version: "1.0.0"
  title: "Simple e-shop"
host: "localhost:8080"
basePath: "/v1"
tags:
- name: "products"
  description: "All about products"
- name: "orders"
  description: "Access to product orders"
schemes:
- "https"
- "http"
paths:
  /products:
    get:
      tags:
      - "products"
      summary: "Get all products"
      operationId: "get_products"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ArrayOfProducts"
      x-swagger-router-controller: "swagger_server.controllers.products_controller"
  /products/{productId}:
    post:
      tags:
      - "products"
      summary: "Updates a product in the store with form data"
      description: ""
      operationId: "update_product"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of productId to update"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "Product object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.products_controller"
  /orders:
    get:
      tags:
      - "orders"
      summary: "Get all orders"
      operationId: "get_orders"
      parameters: []
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ArrayOfOrders"
      x-swagger-router-controller: "swagger_server.controllers.orders_controller"
    post:
      tags:
      - "orders"
      summary: "Place an order for a product"
      description: ""
      operationId: "place_order"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "order placed for purchasing the product"
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Order"
        400:
          description: "Invalid Order"
      x-swagger-router-controller: "swagger_server.controllers.orders_controller"
  /orders/{orderId}:
    delete:
      tags:
      - "orders"
      summary: "Delete purchase order by ID"
      description: "For valid response try integer IDs with positive integer value.\
        \         Negative or non-integer values will generate API errors"
      operationId: "delete_order"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of the order that needs to be deleted"
        required: true
        type: "integer"
        minimum: 1
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Order not found"
      x-swagger-router-controller: "swagger_server.controllers.orders_controller"
definitions:
  Product:
    type: "object"
    required:
    - "name"
    - "quantity"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "A sample product"
      quantity:
        type: "integer"
    example:
      quantity: 13
      name: "A sample product"
      id: 7
  ArrayOfProducts:
    type: "array"
    items:
      $ref: "#/definitions/Product"
  Order:
    type: "object"
    required:
    - "products"
    properties:
      id:
        type: "integer"
        format: "int64"
      products:
        type: "array"
        items:
          $ref: "#/definitions/Product"
    example:
      id: 0
      products:
      - quantity: 13
        name: "A sample product"
        id: 7
      - quantity: 13
        name: "A sample product"
        id: 7
  ArrayOfOrders:
    type: "array"
    items:
      $ref: "#/definitions/Order"
